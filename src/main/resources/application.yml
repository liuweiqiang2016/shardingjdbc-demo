server:
    port: 8088
    servlet:
        context-path: /sharding
spring:
    shardingsphere:
        datasource:
            names: db1,db2
            db1:
                driver-class-name: com.mysql.cj.jdbc.Driver
                type: com.zaxxer.hikari.HikariDataSource
                jdbc-url: jdbc:mysql://192.168.22.82:3306/order_db_1?useUnicode=true&useSSL=false
                username: root
                password: 123456
                validationQuery: SELECT 1 FROM DUAL
            db2:
                driver-class-name: com.mysql.cj.jdbc.Driver
                type: com.zaxxer.hikari.HikariDataSource
                jdbc-url: jdbc:mysql://192.168.22.82:3306/order_db_2?useUnicode=true&useSSL=false
                username: root
                password: 123456
                validationQuery: SELECT 1 FROM DUAL
        sharding:
            tables:
                t_order:
                    actual-data-nodes: db$->{1..2}.t_order_$->{1..3}
                    database-strategy:
#                        自定义分片策略
                        complex:
                            shardingColumns: user_id
                            algorithmClassName: com.zdxlz.lwq.ShardingAlgorithm.ComplexRule
#                        inline:
#                            sharding-column: user_id
#                            algorithm-expression: db$->{user_id % 2 + 1}
                    table-strategy:
                        inline:
                            sharding-column: price
                            algorithm-expression: t_order_$->{price % 3 + 1}
                    key-generator:
                        column: order_id
                        type: SNOWFLAKE
        props:
            sql:
                show: true